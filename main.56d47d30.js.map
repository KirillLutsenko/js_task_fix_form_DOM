{"version":3,"sources":["scripts/main.js"],"names":["inputs","document","querySelectorAll","input","label","createElement","className","htmlFor","id","textContent","editingPlaceholderAndLabel","name","parentNode","append","placeholder","string","letters","slice","symbol","toUpperCase","push","join"],"mappings":";AAAA,aA2BC,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBD,IAyBC,EAzBKA,EAASC,SAASC,iBAAiB,eAErBF,EAAAA,EAAAA,GAuBnB,IAvB2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAjBG,IAAAA,EAAiB,EAAA,MACpBC,EAAQH,SAASI,cAAc,SAErCD,EAAME,UAAY,cAClBF,EAAMG,QAAUJ,EAAMK,GACtBJ,EAAMK,YAAcC,EAA2BP,EAAMQ,MAErDR,EAAMS,WAAWC,OAAOT,GACxBD,EAAMW,YAAcJ,EAA2BP,EAAMQ,OAetD,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAZD,SAASD,EAA2BK,GAC5BC,IADoC,EACpCA,EAAU,GAEKD,EAAAA,EAAAA,EAAOE,MAAM,IAHQ,IAGJ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA3BC,IAAAA,EAA2B,EAAA,MAChCA,IAAWA,EAAOC,cACpBH,EAAQI,KAAK,IAAKF,GAElBF,EAAQI,KAAKF,IAPyB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAWnCH,OAAAA,EAAO,GAAGI,cAAgBH,EAAQK,KAAK","file":"main.56d47d30.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('.field-text');\n\nfor (const input of inputs) {\n  const label = document.createElement('label');\n\n  label.className = 'field-label';\n  label.htmlFor = input.id;\n  label.textContent = editingPlaceholderAndLabel(input.name);\n\n  input.parentNode.append(label);\n  input.placeholder = editingPlaceholderAndLabel(input.name);\n}\n\nfunction editingPlaceholderAndLabel(string) {\n  const letters = [];\n\n  for (const symbol of string.slice(1)) {\n    if (symbol === symbol.toUpperCase()) {\n      letters.push(' ', symbol);\n    } else {\n      letters.push(symbol);\n    }\n  }\n\n  return string[0].toUpperCase() + letters.join('');\n}\n"]}